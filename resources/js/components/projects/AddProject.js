import React, { useState, useEffect } from "react";
import { addProject } from "../../actions/projectActions";
import { useDispatch, useSelector } from "react-redux";
import classnames from "classnames";
import { Redirect } from "react-router-dom";
import { clearErrors } from "../../actions/errorActions";
import { useHistory } from "react-router-dom";

const AddProject = () => {
    //project state
    const [project, setProject] = useState({
        name: "",
        description: ""
        //user_id: "1"
    });

    //error states
    const [errMsg, setErrMsg] = useState(null);
    const [nameErr, setNameErr] = useState(null);
    const [descriptionErr, setDescriptionErr] = useState(null);

    //get reducers
    const projectSuccessMsg = useSelector(
        state => state.project.projectSuccessMsg
    );
    //console.log(projectSuccessMsg);
    const error = useSelector(state => state.error);
    const auth = useSelector(state => state.auth); //
    const { user_id } = auth;

    const dispatch = useDispatch();

    //checking for errors
    useEffect(() => {
        if (error.id === "ADD_PROJECT_FAIL") {
            setErrMsg(error.msg.message);
            setNameErr(error.msg.errors.name && error.msg.errors.name[0]);
            setDescriptionErr(
                error.msg.errors.description && error.msg.errors.description[0]
            );
            return;
        }
    }, [error]);

    const history = useHistory();

    const onSubmit = e => {
        e.preventDefault();

        const newProject = new FormData();
        newProject.append("name", project.name);
        newProject.append("description", project.description);
        newProject.append("user_id", user_id);

        dispatch(addProject(newProject));

        setProject({
            name: "",
            description: ""
            //user_id: ""
        });

        setErrMsg(null);
        setNameErr(null);
        setDescriptionErr(null);

        //clears generated by redux
        dispatch(clearErrors());

        //history.push("/");
    };

    if (projectSuccessMsg) return <Redirect to="/" />;

    return (
        <div className="container py-4">
            <div className="row justify-content-center">
                <div className="col-md-8">
                    <div className="card mb-3">
                        {/* {projectSuccessMsg && (
                            <p className="alert alert-success text-center">
                                {projectSuccessMsg}
                            </p>
                        )} */}

                        {errMsg && (
                            <p className="alert alert-danger text-center">
                                {errMsg}
                            </p>
                        )}

                        <div className="card-header text-center">
                            Add Project
                        </div>

                        <div className="card-body">
                            <form onSubmit={onSubmit}>
                                {/* <input
                                    type="hidden"
                                    name="user_id"
                                    value={project.user_id}
                                    onChange={e =>
                                        setPost({
                                            ...post,
                                            user_id: e.target.value
                                        })
                                    }
                                /> */}

                                <div className="form-group">
                                    <label htmlFor="name"></label>
                                    <input
                                        type="text"
                                        name="name"
                                        className={classnames(
                                            "form-control form-control-lg",
                                            { "is-invalid": nameErr }
                                        )}
                                        placeholder="Enter Name"
                                        value={project.name}
                                        onChange={e =>
                                            setProject({
                                                ...project,
                                                name: e.target.value
                                            })
                                        }
                                    />

                                    {nameErr && (
                                        <p className="invalid-feedback d-block">
                                            {nameErr}
                                        </p>
                                    )}
                                </div>

                                <div className="form-group">
                                    <textarea
                                        name="body"
                                        className={classnames(
                                            "form-control form-control-lg",
                                            { "is-invalid": descriptionErr }
                                        )}
                                        placeholder="Enter Description"
                                        cols="30"
                                        rows="5"
                                        value={project.description}
                                        onChange={e =>
                                            setProject({
                                                ...project,
                                                description: e.target.value
                                            })
                                        }
                                    />
                                    {descriptionErr && (
                                        <p className="invalid-feedback d-block">
                                            {descriptionErr}
                                        </p>
                                    )}
                                </div>

                                <div className="form-group">
                                    <input
                                        type="submit"
                                        className="form-control-lg bg-dark text-white w-100"
                                        value="SUBMIT PROJECT"
                                    />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default AddProject;
