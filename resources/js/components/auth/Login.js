import React, { useState, useEffect } from "react";
import { login } from "../../actions/authActions";
import { useDispatch, useSelector } from "react-redux";
import classnames from "classnames";
import { clearErrors } from "../../actions/errorActions";
import { Redirect } from "react-router-dom";

const Login = () => {
    const [user, setUser] = useState({
        email: "",
        password: ""
    });

    const [errMsg, setErrMsg] = useState(null);

    const [emailErr, setEmailErr] = useState(null);
    const [passwordErr, setPasswordErr] = useState(null);

    //const userSuccessMsg = useSelector(state => state.auth.userSuccessMsg)
    const auth = useSelector(state => state.auth);
    const { userSuccessMsg, isAuthenticated } = auth;

    const error = useSelector(state => state.error);

    const dispatch = useDispatch();

    //checking errors
    useEffect(() => {
        if (error.id === "LOGIN_FAIL") {
            setErrMsg(error.msg.message);

            setEmailErr(error.msg.errors.email && error.msg.errors.email[0]);
            setPasswordErr(
                error.msg.errors.password && error.msg.errors.password[0]
            );
        }
    }, [error]);

    const onSubmit = e => {
        e.preventDefault();

        dispatch(login(user));

        setUser({
            email: "",
            password: ""
        });

        setErrMsg(null);

        setEmailErr(null);
        setPasswordErr(null);

        //clears generated by redux
        dispatch(clearErrors());
    };

    if (isAuthenticated) return <Redirect to="/" />;

    return (
        <div className="container py-4">
            <div className="row justify-content-center">
                <div className="col-md-8">
                    <div className="card mb-3">
                        {userSuccessMsg && (
                            <p className="alert alert-success text-center">
                                Login Successful
                            </p>
                        )}

                        {errMsg && (
                            <p className="alert alert-danger text-center">
                                {errMsg}
                            </p>
                        )}

                        <div className="card-header text-center">
                            Registration
                        </div>

                        <div className="card-body">
                            <form onSubmit={onSubmit}>
                                <div className="form-group">
                                    <label htmlFor="email"></label>
                                    <input
                                        type="text"
                                        name="email"
                                        className={classnames(
                                            "form-control form-control-lg",
                                            { "is-invalid": emailErr }
                                        )}
                                        placeholder="Enter Email"
                                        value={user.email}
                                        onChange={e =>
                                            setUser({
                                                ...user,
                                                email: e.target.value
                                            })
                                        }
                                    />

                                    {emailErr && (
                                        <p className="invalid-feedback d-block">
                                            {emailErr}
                                        </p>
                                    )}
                                </div>

                                <div className="form-group">
                                    <label htmlFor="password"></label>
                                    <input
                                        type="text"
                                        name="password"
                                        className={classnames(
                                            "form-control form-control-lg",
                                            { "is-invalid": passwordErr }
                                        )}
                                        placeholder="Enter Password"
                                        value={user.password}
                                        onChange={e =>
                                            setUser({
                                                ...user,
                                                password: e.target.value
                                            })
                                        }
                                    />

                                    {passwordErr && (
                                        <p className="invalid-feedback d-block">
                                            {passwordErr}
                                        </p>
                                    )}
                                </div>

                                <div className="form-group">
                                    <input
                                        type="submit"
                                        className="form-control-lg bg-dark text-white w-100"
                                        value="LOGIN"
                                    />
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default Login;
