import React, { useEffect, useState } from "react";
import { addTask } from "../../actions/taskActions";
import { useDispatch, useSelector } from "react-redux";
import classnames from "classnames";
import { clearErrors } from "../../actions/errorActions";
import { useHistory } from "react-router-dom";

const AddTask = ({ project, errMsg, titleErr }) => {
    const [newTask, setNewTask] = useState({
        title: "",
        project_id: "",
        created_by: "1"
    });

    //destructure project id
    const { id } = project;

    const dispatch = useDispatch();
    const history = useHistory();

    //add new Task
    const submitNewTask = e => {
        e.preventDefault();

        const addedTask = new FormData();
        addedTask.append("title", newTask.title);
        addedTask.append("project_id", id);
        addedTask.append("created_by", newTask.created_by);

        dispatch(addTask(addedTask, id));

        setNewTask({
            title: "",
            project_id: "",
            created_by: ""
        });

        history.push(`/project/${project.slug}`);

        //clears generated by redux
        dispatch(clearErrors());
    };

    return (
        <div>
            <form onSubmit={submitNewTask}>
                <input
                    type="hidden"
                    name="created_by"
                    value={newTask.created_by || ""}
                    onChange={e =>
                        setNewTask({
                            ...newTask,
                            created_by: e.target.value
                        })
                    }
                />

                <div className="input-group">
                    <input
                        type="text"
                        name="title"
                        className={classnames("form-control form-control-lg", {
                            "is-invalid": titleErr
                        })}
                        placeholder="Task title"
                        value={newTask.title || ""}
                        onChange={e =>
                            setNewTask({
                                ...newTask,
                                title: e.target.value
                            })
                        }
                    />
                    <div className="input-group-append">
                        <button className="btn btn-primary">Add</button>
                    </div>

                    {titleErr && (
                        <p className="invalid-feedback d-block">{titleErr}</p>
                    )}
                </div>
            </form>
        </div>
    );
};

export default AddTask;
